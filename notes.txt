# BFGS
# The BFGS method is a quasi-Newton optimization method that approximates the Hessian matrix using the first-order derivative [O(n^2)]

# Second-Order Methods: 
These methods utilize the second derivatives (Hessian matrix) of the function to find the minima. 
The Hessian provides curvature information which helps in adjusting the step sizes and directions in multidimensional space, 
offering faster convergence under suitable conditions.

-> Hessian Approximation: 
BFGS does not calculate the Hessian matrix directly. Instead, it approximates the Hessian based on gradient evaluations. 
This approach reduces computational overhead, especially beneficial for problems involving a large number of variables.
-> Update Formula: 
The method updates an approximation to the inverse of the Hessian matrix using the differences in gradients between iterations. 
This allows BFGS to be more memory-efficient and quicker than computing the actual Hessian.
Use in Optimization: In the optimization process, BFGS adjusts its search directions based on this approximated Hessian matrix, 
aiming to converge towards the function's minimum by considering the curvature of the function.

# Newton-Raphson
# Newton-Raphson method uses the second-order derivative (Hessian matrix) to optimize the parameters [O(n^3)]

X: [ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545
  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.
  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455
  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909
  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364
  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818
  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273
  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727
  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182
  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636
  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091
  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545
  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.
  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455
  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909
  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364
  9.72727273  9.81818182  9.90909091 10.        ]
Y: [ 23.64052346  10.7536382   17.34109885  30.81389067  27.98136503
   0.48341955  20.75708252  10.79221304  12.37277016  18.65970403
  17.19250183  31.54273507  25.90789791  20.86137826  25.47995464
  25.82434658  38.92426181  23.47734298  30.25464396  20.22763765
   4.93291176  38.74279752  42.64436199  28.421325    60.43308343
  25.1340292   42.12700666  41.8389053   61.12944504  62.63573646
  51.68170566  56.15352602  45.78329955  37.19203532  55.90930826
  63.38993597  76.61695639  78.87503816  65.56474835  69.05135266
  64.27480093  63.2956884   63.21828983 102.62345643  80.90347818
  84.55314128  79.38940177 102.72531678  81.89407938  99.03788645
  95.39244183 111.44753738 105.75145276 102.3837608  117.28842565
 125.28331871 125.14451107 131.03298344 125.24355592 131.58746437
 132.16795751 139.0243031  138.26523139 132.96031447 155.87343498
 154.00698403 145.69801653 170.65261594 161.02618991 174.74259445
 185.68759984 183.90966382 198.28656883 178.86661783 199.61019327
 193.16016355 195.77136735 203.21150335 210.45472261 218.75173607
 211.20800572 236.58677727 237.00373184 221.80285239 256.91557979
 265.90930498 263.70515108 255.13463594 251.29247378 277.66021975
 268.24922227 289.72031847 284.84308036 297.84077053 297.0016805
 305.91697135 304.41904979 327.68515122 316.65755068 325.01989363]
Initial random parameters: [0.63125003 0.92525629 0.02992991 0.08834875 0.77209999]
Optimized parameters: [0.68226351 0.96139464 0.03800957 0.00132555 0.22331625]